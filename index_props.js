import projectConfig from '/pagic.config.js';
export default {
    config: { "root": "/", ...projectConfig, branch: 'main' },
    'pagePath': "README.md",
    'layoutPath': "_layout.tsx",
    'outputPath': "index.html",
    'title': "ðŸ¦– Deno-Hosts",
    'content': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<h1>ðŸ¦– Deno-Hosts</h1>\n<p><a href="https://nest.land/package/deno_hosts"><img src="https://nest.land/badge.svg" alt="nest badge"></a></p>\n<p><strong>The hosts file parsing and resolver module for Deno</strong></p>\n<p>Deno-Hosts is a Deno (Typescript) module for parsing hosts files and performing reverse IP -&gt; hostname or vice versa lookups which are file or text data based (e.g. via <code>/etc/hosts</code>).</p>\n<p>This can be helpful to determine if there is a prettier (or known) hostname available for an IP address.</p>\n<p>These lookups are &quot;extremely inexpensive&quot; compared to normal IP reverse DNS lookups because no network communication is required, as these lookups are all file-based (offline)! Naturally, the (obvious) tradeoff/downside is that this only works in cases where the IP mapping exists in the hostsfile.</p>\n<h2 id="usages">Usages<a class="anchor" href="#usages">Â§</a></h2>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/deno_hosts@v1.0.1/mod.ts">https://deno.land/x/deno_hosts@v1.0.1/mod.ts</a>\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> hostsPath <span class="token operator">=</span> <span class="token string">"/etc/hosts"</span><span class="token punctuation">;</span>  <span class="token comment">// Hosts file path</span>\n\n<span class="token keyword">const</span> hosts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hosts</span><span class="token punctuation">(</span><span class="token maybe-class-name">Deno</span><span class="token punctuation">.</span><span class="token method function property-access">readTextFileSync</span><span class="token punctuation">(</span>hostsPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>hosts<span class="token punctuation">.</span><span class="token method function property-access">toObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="output">Output<a class="anchor" href="#output">Â§</a></h3>\n<pre class="language-json"><code class="language-json"><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>      \n        <span class="token property">"hostname"</span><span class="token operator">:</span> <span class="token string">"localhost"</span><span class="token punctuation">,</span>\n        <span class="token property">"alias"</span><span class="token operator">:</span> <span class="token null keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"127.0.1.1"</span><span class="token punctuation">,</span>\n        <span class="token property">"hostname"</span><span class="token operator">:</span> <span class="token string">"local.test"</span><span class="token punctuation">,</span>\n        <span class="token property">"alias"</span><span class="token operator">:</span> <span class="token string">"local"</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre>\n<h2 id="deno-registry-links">Deno Registry Links<a class="anchor" href="#deno-registry-links">Â§</a></h2>\n<ul>\n<li><a href="https://nest.land/package/deno_hosts">Nest.land -&gt; deno_hosts</a></li>\n<li><a href="https://deno.land/x/deno_hosts">Deno.land -&gt; deno_hosts</a></li>\n</ul>\n<p><strong>Usages from Nest.land</strong></p>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://x.nest.land/deno_hosts@2.0.0/mod.ts">https://x.nest.land/deno_hosts@2.0.0/mod.ts</a>\'</span><span class="token punctuation">;</span>\n</code></pre>\n<p><strong>Usages from Deno.land</strong></p>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/deno_hosts/mod.ts">https://deno.land/x/deno_hosts/mod.ts</a>\'</span><span class="token punctuation">;</span> <span class="token comment">// Latest version</span>\n</code></pre>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/deno_hosts@v1.0.1/mod.ts">https://deno.land/x/deno_hosts@v1.0.1/mod.ts</a>\'</span> <span class="token comment">// Specific Version</span>\n</code></pre>\n<h2 id="api">API<a class="anchor" href="#api">Â§</a></h2>\n<ul>\n<li><strong>hosts.toObject()</strong> - For geeting JSON from hosts file.</li>\n<li><strong>hosts.toText()</strong> - Re-convert text from parsed hosts file.</li>\n<li><strong>hosts.resolve(hostname : string)</strong> - Lookup hostname -&gt; IP (Return <code>undefined</code> in case of not found).</li>\n<li><strong>hosts.reverse(ip : string)</strong> - Lookup IP -&gt; hostname (Return <code>undefined</code> in case of not found).</li>\n<li><strong>hosts.match(str: string)</strong> - Lookup and match ip/hostname/alias and return a Host object.</li>\n</ul>\n<pre class="language-javascript"><code class="language-javascript">type <span class="token maybe-class-name">Host</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    ip<span class="token operator">:</span> string<span class="token punctuation">,</span>\n    hostname<span class="token operator">:</span> string<span class="token punctuation">,</span>\n    alias<span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword null nil">null</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Hosts</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span>hosts <span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token known-class-name class-name">Object</span><span class="token operator">&lt;</span><span class="token maybe-class-name">Hosts</span><span class="token operator">></span>\n    <span class="token function">toObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token maybe-class-name">Hosts</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token function">toText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> string\n    <span class="token function">resolve</span><span class="token punctuation">(</span>hostname <span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword nil">undefined</span>\n    <span class="token function">reverse</span><span class="token punctuation">(</span>ip<span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword nil">undefined</span>\n    <span class="token function">match</span><span class="token punctuation">(</span>str <span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token maybe-class-name">Host</span> <span class="token operator">|</span> <span class="token keyword nil">undefined</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> Hosts file location depends on OS. So use according your OS and for checking run time env OS use <code>Deno.build</code> stable API.</p>\n<ul>\n<li>Windows - <code>C:/Windows/System32/drivers/etc/hosts</code></li>\n<li>Linux - <code>/etc/hosts</code></li>\n<li>Mac OS X - <code>/private/etc/hosts</code></li>\n</ul>\n<h2 id="todo">ToDo<a class="anchor" href="#todo">Â§</a></h2>\n<ul>\n<li>[x] Write Test cases.</li>\n<li>[ ] Write JSDoc for class methods.</li>\n<li>[x] Write Inital Readme content.</li>\n<li>[ ] Write HowTo Guide.</li>\n<li>[x] Publish at Deno.land</li>\n<li>[x] Publish at Nest.land</li>\n<li>[ ] Setup auto Testing using Travis CI</li>\n</ul>\n<h2 id="references">References<a class="anchor" href="#references">Â§</a></h2>\n<ol>\n<li><a href="https://en.wikipedia.org/wiki/Hosts_%28file%29">What is hosts file (wiki)</a></li>\n<li><a href="https://github.com/imyelo/hosts-parser">hosts-parser</a></li>\n<li><a href="https://github.com/jaytaylor/go-hostsfile">go-hostsfile</a></li>\n</ol>\n<h2 id="license">License<a class="anchor" href="#license">Â§</a></h2>\n<p>Permissive MIT license.</p>\n<h2 id="contact">Contact<a class="anchor" href="#contact">Â§</a></h2>\n<p>You are more than welcome to open issues and send pull requests if you find a bug or want a new feature.</p>\n<p>If you appreciate this module please feel free to drop me a line and tell me! It\'s always nice to hear from people who have benefitted from my work.</p>\n<p>Email: <a href="mailto:hello@ganeshagrawal.com">hello (at) ganeshagrawal.com</a></p>\n<p>Twitter: <a href="https://twitter.com/imganeshagrawal">@imganeshagrawal</a></p>'
        } }),
    'head': null,
    'script': React.createElement(React.Fragment, null,
        React.createElement("script", { src: "https://cdn.pagic.org/react@16.13.1/umd/react.production.min.js" }),
        React.createElement("script", { src: "https://cdn.pagic.org/react-dom@16.13.1/umd/react-dom.production.min.js" }),
        React.createElement("script", { src: "/index.js", type: "module" })),
    'contentTitle': React.createElement("h1", { key: "0" }, "\uD83E\uDD96 Deno-Hosts"),
    'contentBody': React.createElement("article", { dangerouslySetInnerHTML: {
            __html: '<p><a href="https://nest.land/package/deno_hosts"><img src="https://nest.land/badge.svg" alt="nest badge"></a></p>\n<p><strong>The hosts file parsing and resolver module for Deno</strong></p>\n<p>Deno-Hosts is a Deno (Typescript) module for parsing hosts files and performing reverse IP -&gt; hostname or vice versa lookups which are file or text data based (e.g. via <code>/etc/hosts</code>).</p>\n<p>This can be helpful to determine if there is a prettier (or known) hostname available for an IP address.</p>\n<p>These lookups are &quot;extremely inexpensive&quot; compared to normal IP reverse DNS lookups because no network communication is required, as these lookups are all file-based (offline)! Naturally, the (obvious) tradeoff/downside is that this only works in cases where the IP mapping exists in the hostsfile.</p>\n<h2 id="usages">Usages<a class="anchor" href="#usages">Â§</a></h2>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/deno_hosts@v1.0.1/mod.ts">https://deno.land/x/deno_hosts@v1.0.1/mod.ts</a>\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> hostsPath <span class="token operator">=</span> <span class="token string">"/etc/hosts"</span><span class="token punctuation">;</span>  <span class="token comment">// Hosts file path</span>\n\n<span class="token keyword">const</span> hosts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Hosts</span><span class="token punctuation">(</span><span class="token maybe-class-name">Deno</span><span class="token punctuation">.</span><span class="token method function property-access">readTextFileSync</span><span class="token punctuation">(</span>hostsPath<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token console class-name">console</span><span class="token punctuation">.</span><span class="token method function property-access">log</span><span class="token punctuation">(</span>hosts<span class="token punctuation">.</span><span class="token method function property-access">toObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre>\n<h3 id="output">Output<a class="anchor" href="#output">Â§</a></h3>\n<pre class="language-json"><code class="language-json"><span class="token punctuation">[</span>\n    <span class="token punctuation">{</span>\n        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"127.0.0.1"</span><span class="token punctuation">,</span>      \n        <span class="token property">"hostname"</span><span class="token operator">:</span> <span class="token string">"localhost"</span><span class="token punctuation">,</span>\n        <span class="token property">"alias"</span><span class="token operator">:</span> <span class="token null keyword">null</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">{</span>\n        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"127.0.1.1"</span><span class="token punctuation">,</span>\n        <span class="token property">"hostname"</span><span class="token operator">:</span> <span class="token string">"local.test"</span><span class="token punctuation">,</span>\n        <span class="token property">"alias"</span><span class="token operator">:</span> <span class="token string">"local"</span>\n    <span class="token punctuation">}</span>\n<span class="token punctuation">]</span>\n</code></pre>\n<h2 id="deno-registry-links">Deno Registry Links<a class="anchor" href="#deno-registry-links">Â§</a></h2>\n<ul>\n<li><a href="https://nest.land/package/deno_hosts">Nest.land -&gt; deno_hosts</a></li>\n<li><a href="https://deno.land/x/deno_hosts">Deno.land -&gt; deno_hosts</a></li>\n</ul>\n<p><strong>Usages from Nest.land</strong></p>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://x.nest.land/deno_hosts@2.0.0/mod.ts">https://x.nest.land/deno_hosts@2.0.0/mod.ts</a>\'</span><span class="token punctuation">;</span>\n</code></pre>\n<p><strong>Usages from Deno.land</strong></p>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/deno_hosts/mod.ts">https://deno.land/x/deno_hosts/mod.ts</a>\'</span><span class="token punctuation">;</span> <span class="token comment">// Latest version</span>\n</code></pre>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword module">import</span> <span class="token imports"><span class="token maybe-class-name">Hosts</span></span> <span class="token keyword module">from</span> <span class="token string">\'<a class="token url-link" href="https://deno.land/x/deno_hosts@v1.0.1/mod.ts">https://deno.land/x/deno_hosts@v1.0.1/mod.ts</a>\'</span> <span class="token comment">// Specific Version</span>\n</code></pre>\n<h2 id="api">API<a class="anchor" href="#api">Â§</a></h2>\n<ul>\n<li><strong>hosts.toObject()</strong> - For geeting JSON from hosts file.</li>\n<li><strong>hosts.toText()</strong> - Re-convert text from parsed hosts file.</li>\n<li><strong>hosts.resolve(hostname : string)</strong> - Lookup hostname -&gt; IP (Return <code>undefined</code> in case of not found).</li>\n<li><strong>hosts.reverse(ip : string)</strong> - Lookup IP -&gt; hostname (Return <code>undefined</code> in case of not found).</li>\n<li><strong>hosts.match(str: string)</strong> - Lookup and match ip/hostname/alias and return a Host object.</li>\n</ul>\n<pre class="language-javascript"><code class="language-javascript">type <span class="token maybe-class-name">Host</span> <span class="token operator">=</span> <span class="token punctuation">{</span>\n    ip<span class="token operator">:</span> string<span class="token punctuation">,</span>\n    hostname<span class="token operator">:</span> string<span class="token punctuation">,</span>\n    alias<span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword null nil">null</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<pre class="language-javascript"><code class="language-javascript"><span class="token keyword">class</span> <span class="token class-name">Hosts</span> <span class="token punctuation">{</span>\n    <span class="token function">constructor</span><span class="token punctuation">(</span>hosts <span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token known-class-name class-name">Object</span><span class="token operator">&lt;</span><span class="token maybe-class-name">Hosts</span><span class="token operator">></span>\n    <span class="token function">toObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token maybe-class-name">Hosts</span><span class="token punctuation">[</span><span class="token punctuation">]</span>\n    <span class="token function">toText</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">:</span> string\n    <span class="token function">resolve</span><span class="token punctuation">(</span>hostname <span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword nil">undefined</span>\n    <span class="token function">reverse</span><span class="token punctuation">(</span>ip<span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> string <span class="token operator">|</span> <span class="token keyword nil">undefined</span>\n    <span class="token function">match</span><span class="token punctuation">(</span>str <span class="token operator">:</span> string<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token maybe-class-name">Host</span> <span class="token operator">|</span> <span class="token keyword nil">undefined</span>\n<span class="token punctuation">}</span>\n</code></pre>\n<p><strong>Note:</strong> Hosts file location depends on OS. So use according your OS and for checking run time env OS use <code>Deno.build</code> stable API.</p>\n<ul>\n<li>Windows - <code>C:/Windows/System32/drivers/etc/hosts</code></li>\n<li>Linux - <code>/etc/hosts</code></li>\n<li>Mac OS X - <code>/private/etc/hosts</code></li>\n</ul>\n<h2 id="todo">ToDo<a class="anchor" href="#todo">Â§</a></h2>\n<ul>\n<li>[x] Write Test cases.</li>\n<li>[ ] Write JSDoc for class methods.</li>\n<li>[x] Write Inital Readme content.</li>\n<li>[ ] Write HowTo Guide.</li>\n<li>[x] Publish at Deno.land</li>\n<li>[x] Publish at Nest.land</li>\n<li>[ ] Setup auto Testing using Travis CI</li>\n</ul>\n<h2 id="references">References<a class="anchor" href="#references">Â§</a></h2>\n<ol>\n<li><a href="https://en.wikipedia.org/wiki/Hosts_%28file%29">What is hosts file (wiki)</a></li>\n<li><a href="https://github.com/imyelo/hosts-parser">hosts-parser</a></li>\n<li><a href="https://github.com/jaytaylor/go-hostsfile">go-hostsfile</a></li>\n</ol>\n<h2 id="license">License<a class="anchor" href="#license">Â§</a></h2>\n<p>Permissive MIT license.</p>\n<h2 id="contact">Contact<a class="anchor" href="#contact">Â§</a></h2>\n<p>You are more than welcome to open issues and send pull requests if you find a bug or want a new feature.</p>\n<p>If you appreciate this module please feel free to drop me a line and tell me! It\'s always nice to hear from people who have benefitted from my work.</p>\n<p>Email: <a href="mailto:hello@ganeshagrawal.com">hello (at) ganeshagrawal.com</a></p>\n<p>Twitter: <a href="https://twitter.com/imganeshagrawal">@imganeshagrawal</a></p>'
        } }),
    'toc': React.createElement("nav", { key: "0", className: "toc" },
        React.createElement("ol", null,
            React.createElement("li", null,
                React.createElement("a", { href: "#usages" }, "Usages"),
                React.createElement("ol", null,
                    React.createElement("li", null,
                        React.createElement("a", { href: "#output" }, "Output")))),
            React.createElement("li", null,
                React.createElement("a", { href: "#deno-registry-links" }, "Deno Registry Links")),
            React.createElement("li", null,
                React.createElement("a", { href: "#api" }, "API")),
            React.createElement("li", null,
                React.createElement("a", { href: "#todo" }, "ToDo")),
            React.createElement("li", null,
                React.createElement("a", { href: "#references" }, "References")),
            React.createElement("li", null,
                React.createElement("a", { href: "#license" }, "License")),
            React.createElement("li", null,
                React.createElement("a", { href: "#contact" }, "Contact")))),
    'author': "iamganeshagrawal",
    'contributors': [
        "iamganeshagrawal"
    ],
    'date': "2021-03-19T12:58:19.000Z",
    'updated': null,
    'excerpt': "The hosts file parsing and resolver module for Deno Deno-Hosts is a Deno (Typescript) module for parsing hosts files and performing reverse IP -> hostname or vice versa lookups which are file or text data based...",
    'cover': "https://nest.land/badge.svg"
};
